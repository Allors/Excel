# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Add Excel PFX file to the certificate store."

          $pfxpath = '$(Build.SourcesDirectory)/src/ExcelAddIn.Interop/ExcelAddIn.Interop_TemporaryKey.pfx'
          
          Add-Type -AssemblyName System.Security
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
          $cert.Import($pfxpath, "", [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
          $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
          $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
          $store.Add($cert)
          $store.Close()
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: 'build.ps1'
        arguments: '-configuration $(buildConfiguration) -target Ci'
        failOnStderr: true
      displayName: 'Build'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'xunit'
        testResultsFiles: '*.xml'
        searchFolder: '$(Build.SourcesDirectory)/artifacts/tests'
      displayName: 'Publish Test results'
    - task: NuGetAuthenticate@0
      displayName: 'NuGet Authenticate'
    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg;$(Build.SourcesDirectory)/**/*.snupkg;!$(Build.SourcesDirectory)/**/*.symbols.nupkg'
        publishVstsFeed: 'Excel/Excel'
        allowPackageConflicts: true

trigger:
- master
- feature/*

variables:
  buildConfiguration: 'Release'

